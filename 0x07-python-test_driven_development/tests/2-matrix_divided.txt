========================
Module: 2-matrix_divided
========================

Matrix Values
=============

``matrix_divided()`` returns a new matrix containing elements of the
input matrix divided by some number.  The input matrix must be a list
of lists of integers or floats.

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]], 7)
	[[0.16, 0.31, 0.47], [0.63, 0.79, 0.94]]

	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[1, 2, 3], [4, 5, "six"]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided("hello", 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([1, 2, 3], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

div Values
==========

``matrix_divided()`` is undefined for a divisor of zero.  It should be
an integer or float.

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.4)
	[[0.42, 0.83, 1.25], [1.67, 2.08, 2.5]]

	>>> matrix_divided([[1.1375, 2.2, 3.3], [4.4, 5.5, 6.6]], 0.3125)
	[[3.64, 7.04, 10.56], [14.08, 17.6, 21.12]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "ten")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

